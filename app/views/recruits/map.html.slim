h2.mt-5.m-2 gmap 
/ = form_with url: map_request_path, method: :get do |f|
/   / = f.text_field :address
/   = f.submit '地図表示'
#map
css:
  #map{
    height: 500px;
  }

li#hoge data-resource = @recruits_json
javascript:
  const data = JSON.parse(document.getElementById('hoge').dataset.resource);
  function initMap() {
    // 日本の中央を表示する
    const defaultSettings = {zoom: 2, center: {lat: 0, lng: 0}};
    const map = new google.maps.Map(
      document.querySelector('#map'),
      defaultSettings
    );

    // 現在表示されているinfoWindowオブジェクト
    let currentWindow;

    data.map(d => {
      var contentString = 
      '<div id="content">'+
        `<p><a href=/recruits/${d.id}>${d.title}</a><p>`+
        `<p>@${d.city}<p>`+
      '</div>';

      var image = {
        url: `http://localhost:3000/${d.user.image}`,
        // This marker is 20 pixels wide by 32 pixels high.
        scaledSize: new google.maps.Size(50, 50),
        // The origin for this image is (0, 0).
        origin: new google.maps.Point(0, 0),
        // The anchor for this image is the base of the flagpole at (0, 32).
        anchor: new google.maps.Point(0, 32)
      };

      // マーカーをつける
      const marker = new google.maps.Marker({
        position: {lat: d.latitude, lng: d.longitude},
        animation: google.maps.Animation.DROP,
        map: map,
        icon: image,
      });

      // マーカークリックしたら地名をポップアップさせる
      marker.addListener('click', () => {
        currentWindow && currentWindow.close();
        const infoWindow = new google.maps.InfoWindow({content: contentString});
        infoWindow.open(map, marker);
        currentWindow = infoWindow;
      });
    });
  }

script async="" defer="defer" src="https://maps.googleapis.com/maps/api/js?key=#{Rails.application.credentials.dig(:GOOGLE_API_SERVER_KEY)}&callback=initMap"  
